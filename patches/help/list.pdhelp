#N canvas 523 74 399 628 12;
#X obj 36 108 list append;
#X obj 36 252 list prepend;
#X obj 36 372 list split;
#X obj 36 228 list length;
#X obj 12 12 cnv 15 275 45 empty empty empty 0 -7 0 10 #ffd300 #000000;
#X obj -60 12 freeze;
#X text 24 24 list;
#X text 12 588 See also:;
#X obj 84 588 text;
#X obj 180 588 prepend;
#X obj 240 588 pack;
#X text 12 72 The list object's first argument sets its function.;
#X text 12 480 Examples.;
#X text 168 372 Split a list in two.;
#X obj 132 588 array;
#X text 168 108 Append something to a list.;
#X text 168 252 Prepend something to a list.;
#X obj 36 396 list store;
#X obj 36 204 list iterate;
#X obj 36 180 list group;
#N canvas 847 386 300 92 more 0;
#N canvas 741 152 300 450 trim 0;
#X msg 36 252 1 2 3;
#X msg 36 72 list cis boom bah;
#X msg 36 324 bang;
#X msg 36 48 walk the dog;
#X obj 36 144 list trim;
#X msg 36 276 1 x y;
#X msg 36 96 x 1 y;
#X msg 36 300 55;
#X obj 36 180 print;
#X obj 36 372 list trim;
#X obj 36 408 print;
#X text 12 216 Otherwise a list is output.;
#X text 12 12 Convert list to message if possible.;
#X f 36;
#X connect 0 0 9 0;
#X connect 1 0 4 0;
#X connect 2 0 9 0;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 5 0 9 0;
#X connect 6 0 4 0;
#X connect 7 0 9 0;
#X connect 9 0 10 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 24 48 pd trim;
#N canvas 625 185 458 285 from/to 0;
#X obj 36 120 list fromsymbol;
#X msg 36 168 101 105 103 104 116 101 101 110;
#X obj 36 192 list tosymbol;
#X msg 36 48 symbol seventeen;
#X text 12 12 Convert a list of numbers (ASCII or UTF8) to/from a symbol.;
#X f 59;
#X obj 36 240 print;
#X f 5;
#X obj 36 144 prepend set;
#X msg 36 72 symbol eighteen;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 0 0;
#X connect 6 0 1 0;
#X connect 7 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 24 24 pd from/to;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 540 pd more;
#X f 7;
#X obj 36 276 list reverse;
#X text 168 276 Reverse content.;
#X obj 36 300 list rotate;
#X text 168 300 Rotate content.;
#X text 168 228 Get the number of elements.;
#N canvas 936 248 300 236 examples 0;
#N canvas 429 115 421 535 append 0;
#X obj 36 204 list append 1 2;
#X floatatom 36 120 5 0 0 0 - - -;
#X f 5;
#X msg 36 48 1 2 3;
#X msg 36 72 list cis boom bah;
#X msg 36 144 bang;
#X msg 36 96 walk the dog;
#X msg 228 312 4 5 6 and 7;
#X obj 36 240 print;
#X obj 36 456 list append;
#X obj 36 492 print;
#X text 12 12 Append (concatenate) the second list to the first.;
#X msg 36 288 Pyrrhus et Cinéas;
#X floatatom 228 336 5 0 0 1 - - -;
#X f 5;
#X msg 228 360 bang;
#X msg 228 288 sont dans un bateau...;
#X connect 0 0 7 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 8 1;
#X connect 8 0 9 0;
#X connect 11 0 8 0;
#X connect 12 0 8 1;
#X connect 13 0 8 1;
#X connect 14 0 8 1;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 24 pd append;
#N canvas 756 108 387 513 split 0;
#X msg 36 72 list cis boom bah;
#X obj 36 228 list split 2;
#X msg 36 48 walk the dog;
#X msg 36 96 1 2 3 4;
#X msg 36 120 1 2 so are you;
#X text 12 12 Cut a list into smaller ones.;
#X f 29;
#X obj 36 276 print;
#X obj 156 468 print;
#X floatatom 36 372 5 0 0 1 - - -;
#X f 5;
#X text 12 312 The third outlet reports short lists unsplittable.;
#X msg 36 144 Pyrrhus et Cinéas sont dans un bateau...;
#X floatatom 144 192 5 0 7 1 - - -;
#X f 5;
#X obj 36 420 list split 3;
#X msg 36 348 walk the;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 1 1 6 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 8 0 12 0;
#X connect 10 0 1 0;
#X connect 11 0 1 1;
#X connect 12 2 7 0;
#X connect 13 0 12 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 180 96 pd split;
#N canvas 754 138 408 534 prepend 0;
#X text 12 12 Prepend the second list to the first.;
#X floatatom 36 120 5 0 0 0 - - -;
#X f 5;
#X msg 36 72 list cis boom bah;
#X msg 36 144 bang;
#X msg 36 96 walk the dog;
#X msg 252 312 4 5 6 and 7;
#X obj 36 240 print;
#X obj 36 492 print;
#X msg 36 288 sont dans un bateau...;
#X obj 36 204 list prepend 1 2;
#X msg 36 48 3 4 5;
#X obj 36 456 list prepend;
#X msg 252 288 Blake et Mortimer;
#X obj 252 384 pointer;
#X msg 252 348 traverse \, bang;
#X connect 1 0 9 0;
#X connect 2 0 9 0;
#X connect 3 0 9 0;
#X connect 4 0 9 0;
#X connect 5 0 11 1;
#X connect 8 0 11 0;
#X connect 9 0 6 0;
#X connect 10 0 9 0;
#X connect 11 0 7 0;
#X connect 12 0 11 1;
#X connect 13 0 11 1;
#X connect 14 0 13 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 168 pd prepend;
#N canvas 882 278 300 291 length 0;
#X msg 36 120 1 2 3;
#X msg 36 72 list cis boom bah;
#X msg 36 144 bang;
#X msg 36 48 walk the dog;
#X msg 36 168 1 x y;
#X msg 36 96 55;
#X obj 36 216 list length;
#X text 12 12 Get the umber of items in a list.;
#X obj 36 252 print;
#X connect 0 0 6 0;
#X connect 1 0 6 0;
#X connect 2 0 6 0;
#X connect 3 0 6 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 6 0 8 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 144 pd length;
#N canvas 756 97 472 538 store 0;
#X obj 36 240 print;
#X msg 36 72 prepend non compliant;
#X msg 168 168 auxiliary compliance outpost;
#X text 12 12 Build lists easily.;
#X obj 36 492 print;
#X msg 36 336 get 1 3;
#X obj 36 456 list store;
#X msg 144 420 Pyrame et Thisbé sont dans un bateau...;
#X obj 144 384 loadbang;
#X text 12 276 Get elements.;
#X msg 36 312 get 1;
#N canvas 879 188 300 322 more 0;
#X msg 36 72 get -1;
#X msg 36 24 get 1 0;
#X obj 36 276 outlet;
#X msg 36 48 get 1 -1;
#X msg 36 96 get -2 2;
#X msg 36 144 pop 2;
#X msg 36 120 pop;
#X msg 36 168 pop 0;
#X msg 36 216 cut -1;
#X msg 36 192 cut 1 3;
#X connect 0 0 2 0;
#X connect 1 0 2 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 8 0 2 0;
#X connect 9 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 60 420 pd more;
#N canvas 248 407 422 309 more 0;
#X obj 36 264 outlet;
#X msg 60 216 clear;
#X msg 36 96 insert 1 Les Fourberies de Scapin;
#X msg 36 120 remove 2 3;
#X msg 36 24 set 0 one two;
#X msg 36 48 set 2 Romeo and Juliet;
#X msg 36 72 set -1 Bérénice;
#X msg 36 144 replace 2 3 La guerre de Troie n'aura pas lieu;
#X msg 36 168 replace -2 1 Rabbi Jacob;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 60 168 pd more;
#X obj 60 132 bng 15 250 50 0 empty empty empty 0 0 0 10 #ffffff #000000 #000000;
#X obj 60 384 bng 15 250 50 0 empty empty empty 0 0 0 10 #ffffff #000000 #000000;
#X obj 36 204 list store 1 2 3;
#X msg 36 48 append 4 five 6;
#X connect 1 0 15 0;
#X connect 2 0 15 1;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 6 1;
#X connect 8 0 7 0;
#X connect 10 0 6 0;
#X connect 11 0 6 0;
#X connect 12 0 15 0;
#X connect 13 0 15 0;
#X connect 14 0 6 0;
#X connect 15 0 0 0;
#X connect 16 0 15 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 180 120 pd store;
#N canvas 968 190 366 417 iterate 0;
#X msg 36 48 bijou caillou chou genou hibou joujou pou;
#X f 41;
#X text 12 12 Cut a list word by word.;
#X obj 36 84 list iterate;
#X obj 36 192 print;
#X obj 144 132 bng 15 250 50 0 empty empty empty 17 7 0 10 #ffffff #000000 #000000;
#X obj 36 348 text set \$0-cake;
#X obj 36 300 list iterate;
#X msg 36 264 eggs milk flour sugar prunes;
#X obj 36 372 text define \$0-cake;
#X text 12 228 Handy to populate a text.;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 2 2 3 0;
#X connect 4 0 3 0;
#X connect 6 0 5 0;
#X connect 6 2 5 1;
#X connect 7 0 6 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 120 pd iterate;
#N canvas 625 134 372 484 group 0;
#X obj 36 192 list group 5;
#X obj 36 228 print;
#X floatatom 36 48 5 0 0 1 - - -;
#X f 5;
#X msg 180 300 clear;
#X obj 36 444 print;
#X obj 36 408 list group 4;
#X msg 36 300 1 \, 2 \, 3;
#X msg 120 300 bang;
#X text 12 264 Erase (and/or output) the residual.;
#N canvas 439 87 369 187 more 0;
#X obj 36 108 list group;
#X floatatom 36 48 5 0 0 1 - - -;
#X f 5;
#X floatatom 120 72 5 0 0 1 - - -;
#X f 5;
#X obj 36 144 print;
#X text 12 12 Change the size afterward (values can be lost).;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 1;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 288 408 pd more;
#X msg 36 72 How to Fail Most Successfully;
#X obj 72 132 pointer;
#X msg 72 108 traverse \, bang;
#X text 12 12 Make given size list with collecting items.;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X connect 10 0 0 0;
#X connect 11 0 0 0;
#X connect 12 0 11 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 96 pd group;
#N canvas 653 284 300 214 reverse 0;
#X text 12 12 Reverse the content of a list.;
#X obj 36 132 list reverse;
#X msg 36 48 1 2 3 4 5 6 7 8 9;
#X obj 36 168 print;
#X msg 36 72 eins zwei drei \, un dos tres;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 4 0 1 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 192 pd reverse;
#N canvas 547 246 300 356 rotate 0;
#X msg 36 192 1 2 3 4 5 6 7 8 9;
#X obj 36 120 print;
#X text 12 12 Rotate the content of a list.;
#X obj 36 276 list rotate -1;
#X obj 36 312 print;
#X floatatom 144 240 5 0 0 1 - - -;
#X f 5;
#X text 12 156 Change the step and the direction.;
#X obj 36 84 list rotate 1;
#X msg 36 48 a b c d e;
#X connect 0 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 3 1;
#X connect 7 0 1 0;
#X connect 8 0 7 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 180 24 pd rotate;
#N canvas 703 312 300 195 scramble 0;
#X obj 36 144 print;
#X text 12 12 Randomize order of elements.;
#X obj 36 108 list scramble;
#X msg 36 48 1 2 3 4 5 6 7 8 9;
#X msg 36 72 a b c d e f g h;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 180 48 pd scramble;
#N canvas 727 356 374 298 sort 0;
#X obj 36 252 print;
#X obj 72 216 list sort;
#X msg 36 48 1 2 3 4 5 6 7 8 9 a b c d e f g h;
#X obj 36 132 list scramble;
#X obj 36 168 t l l;
#X msg 36 72 bijou caillou chou genou hibou joujou pou;
#X f 41;
#X text 12 12 Sort elements of list (ascending).;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 4 1 0 0;
#X connect 5 0 3 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 180 72 pd sort;
#N canvas 792 284 300 298 change 0;
#X obj 36 252 print;
#X msg 36 72 Ce qui est en bas;
#X msg 36 96 Ce qui est en haut;
#X msg 36 48 1 2 3;
#X msg 132 156 Ce qui est en bas;
#X obj 36 192 list change;
#X obj 120 228 tgl 15 0 empty empty empty 0 0 0 10 #ffffff #000000 #000000 0 1;
#X text 12 12 Filter unchanged list.;
#X connect 1 0 5 0;
#X connect 2 0 5 0;
#X connect 3 0 5 0;
#X connect 4 0 5 1;
#X connect 5 0 0 0;
#X connect 5 1 6 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 48 pd change;
#N canvas 717 276 395 297 equal 0;
#X obj 36 252 print;
#X msg 36 48 Professeur Moustache;
#X obj 36 216 list equal Mais tu mourras quand même;
#X msg 36 96 Mais tu mourras quand même;
#X msg 312 168 1 2 3 4;
#X msg 36 120 1 2 3 4 5;
#X msg 36 144 1 2 3 4;
#X msg 36 72 Tu mourras moins bête;
#X msg 36 168 4 3 2 1;
#X text 12 12 Test equality of lists.;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 2 1;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 8 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 72 pd equal;
#N canvas 491 229 355 293 stream 0;
#X text 12 12 Output the N last elements.;
#X obj 36 216 list stream 5;
#X msg 36 48 1 2 3 4 5 6 7 8 9;
#X obj 36 252 print;
#X msg 36 72 a b c d e f g h;
#X obj 72 168 pointer;
#X msg 72 144 traverse \, bang;
#N canvas 341 477 300 242 more 0;
#X msg 36 96 clear;
#X obj 36 192 print;
#X msg 36 48 1 \, 2 \, 3;
#X msg 36 72 bang;
#X obj 36 156 list stream 4;
#X text 12 12 Erase (and/or output) the content.;
#X connect 0 0 4 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 252 168 pd more;
#N canvas 439 87 376 190 again 0;
#X floatatom 36 48 5 0 0 1 - - -;
#X f 5;
#X floatatom 132 72 5 0 0 1 - - -;
#X f 5;
#X obj 36 144 print;
#X text 12 12 Change the size afterward (values can be lost).;
#X obj 36 108 list stream;
#X connect 0 0 4 0;
#X connect 1 0 4 1;
#X connect 4 0 2 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 252 192 pd again;
#X msg 36 96 Quoi de neuf \, docteur Moustache ?;
#N canvas 641 334 300 228 again 0;
#X text 12 12 Compute the slope.;
#X floatatom 36 48 5 0 0 1 - - -;
#X f 5;
#X obj 36 84 list stream 2;
#X obj 36 144 -;
#X floatatom 36 180 5 0 0 1 - - -;
#X f 5;
#X obj 36 108 list rotate 1;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 252 216 pd again;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X connect 9 0 1 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 180 144 pd stream;
#N canvas 570 381 300 215 sum 0;
#X obj 36 168 print;
#X obj 36 132 list sum;
#X msg 36 48 1 2 3 4;
#X msg 36 72 1 2 3 bar 4 foo;
#N canvas 726 343 300 218 more 0;
#X floatatom 36 48 5 0 0 1 - - -;
#X f 5;
#X obj 36 84 list stream 5;
#X obj 36 108 list sum;
#X obj 36 132 / 5;
#X floatatom 36 168 5 0 0 1 - - -;
#X f 5;
#X text 12 12 Compute the running average.;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 204 132 pd more;
#X text 12 12 Compute the sum of all the elements.;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 180 168 pd sum;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 36 516 pd examples;
#X text 168 204 Iterate through a list.;
#X obj 36 324 list scramble;
#X text 168 324 Shuffle elements of a list.;
#X obj 36 348 list sort;
#X text 168 348 Sort list ascending.;
#X obj 36 132 list change;
#X text 168 132 Filter redundant list.;
#X obj 36 156 list equal;
#X text 168 156 List equality.;
#X obj 36 420 list stream;
#X text 168 420 Get the last N elements.;
#X text 168 180 Group N elements into a list.;
#X obj 36 444 list sum;
#X text 168 396 Build and/or store a list.;
#X text 168 444 Get the sum of the elements.;
#X coords 0 0 1 1 250 175 0 0 0;
