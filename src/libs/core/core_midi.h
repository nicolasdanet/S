
/* Copyright (c) 1997-2020 Miller Puckette and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#ifndef CORE_MIDI_H_
#define CORE_MIDI_H_

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#include "../../m_spaghettis.h"
#include "../../m_core.h"

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#include <CoreMIDI/CoreMIDI.h>

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#include "core_audio.h"

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#define coremidi_error(err) core_midiCheck ((err), __LINE__)

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static inline t_error core_midiCheck (OSStatus error, int line)
{
    t_error err = (error != noErr);
    
    #if PD_WITH_DEBUG
    
    if (err) {
    //
    post_log ("*** Core MIDI / line %d", line);
    //
    }
    
    #endif // PD_WITH_DEBUG
    
    return err;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

typedef struct _midiport {
    MIDIEndpointRef     mp_endpoint;
    MIDIPortRef         mp_port;
    int                 mp_hasConnect;
    t_ringbuffer        *mp_buffer;
    t_ringbuffer        *mp_bufferSysex;
    } t_midiport;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

PD_LOCAL t_symbol *midiname_get (MIDIEndpointRef endpoint);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

PD_LOCAL MIDIClientRef      coreclient_get                  (void);

PD_LOCAL void       coreclient_initialize                   (void);
PD_LOCAL void       coreclient_release                      (void);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

PD_LOCAL t_error    mididevicelist_get                      (t_deviceslist *list);

PD_LOCAL MIDIEndpointRef    mididevicelist_fetchSource      (t_symbol *name);
PD_LOCAL MIDIEndpointRef    mididevicelist_fetchDestination (t_symbol *name);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

PD_LOCAL t_error    midiport_openInput                      (t_midiport *midiport, t_symbol *name);
PD_LOCAL t_error    midiport_openOutput                     (t_midiport *midiport, t_symbol *name);

PD_LOCAL void       midiport_close                          (t_midiport *midiport);

PD_LOCAL void       midiport_pushSysex                      (t_midiport *midiport, int argc, t_atom *argv);
PD_LOCAL void       midiport_push                           (t_midiport *midiport, int status, int a, int b);
PD_LOCAL void       midiport_poll                           (t_midiport *midiport, int port);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
#endif // CORE_MIDI_H_
