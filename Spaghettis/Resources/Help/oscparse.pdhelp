#N canvas 844 199 363 305 12;
#X obj 36 180 oscparse;
#X obj 168 264 oscformat;
#X text 12 264 See also:;
#X obj -60 12 freeze;
#X obj 12 12 cnv 15 275 45 empty empty empty 0 -7 0 10 #ffd300 #000000;
#X text 12 72 Parse OSC packets into messages.;
#X f 33;
#X text 24 24 oscparse;
#N canvas 568 274 699 236 more 0;
#X text 12 12 This object takes incoming lists of numbers \, interpreting them as the bytes of an OSC message.;
#X f 94;
#X text 12 36 The output is a list containing \, first \, the symbols making up the address of the OSC packet.;
#X f 93;
#X text 12 60 Then numbers and symbols (as present in the OSC message) are following.;
#X f 71;
#X text 12 108 Blobs are arrays of bytes and are copied to the output preceded by the blob's byte count.;
#X f 89;
#X text 12 84 OSC messages may contain float \, int \, string \, or blob elements.;
#X f 62;
#X text 12 156 I.e. 'i' \, 'f' \, 's' \, 'b' \, 't' \, 'd' \, 'T' \, 'F' \, 'N' \, 'I' types of the OSC 1.1 specification.;
#X f 89;
#X text 12 132 Double \, timetag \, boolean \, null \, or infinitum are also supported.;
#X f 74;
#X text 12 204 Note that if expired they can be fired immediately or discarded.;
#X f 65;
#X text 12 180 Bundles are properly scheduled (messages are parsed in the order they appear inside).;
#X f 85;
#X coords 0 0 1 1 250 175 0 0 0;
#X restore 192 180 pd more;
#X obj 36 216 print;
#X msg 36 108 47 100 111 103 47 99 97 116 0 0 0 0 44 102 102 102 115 102 0 0 63 128 0 0 64 0 0 0 64 64 0 0 102 111 111 0 64 160 0 0;
#X f 40;
#X obj 84 264 oscbundle;
#X obj 252 264 oscstream;
#X connect 0 0 8 0;
#X connect 9 0 0 0;
#X coords 0 0 1 1 250 175 0 0 0;
