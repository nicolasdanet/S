
/* Copyright (c) 1997 Miller Puckette and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#ifndef X_EXPR_H_
#define X_EXPR_H_

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#include "../list/x_list.h"

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#define EXPR_VARIABLES                  9

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#define EXPR_TE_VARIABLE(i, s)          { \
                                            x->x_variables[i].te_name    = (s)->s_name;  \
                                            x->x_variables[i].te_address = x->x_v + (i); \
                                            x->x_variables[i].te_type    = TE_VARIABLE;  \
                                        }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

typedef struct _expr {
    t_object    x_obj;                              /* Must be the first. */
    int         x_count;
    t_listinlet x_listinlets[EXPR_VARIABLES];       /* Used only by vexpr object. */
    t_float     x_f[EXPR_VARIABLES];
    double      x_v[EXPR_VARIABLES];
    te_variable x_variables[EXPR_VARIABLES];
    te_expr     *x_expression;
    t_buffer    *x_vector;                          /* Used only by vexpr object. */
    t_outlet    *x_outlet;
    } t_expr;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

PD_LOCAL int expr_initializeExpression (t_expr *x, int argc, t_atom *argv);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#endif // X_EXPR_H_
