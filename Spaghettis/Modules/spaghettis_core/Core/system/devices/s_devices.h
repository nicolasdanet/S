
/* Copyright (c) 1997 Miller Puckette and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#ifndef S_DEVICES_H_
#define S_DEVICES_H_

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#define DEVICES_MAXIMUM_IO              8
#define DEVICES_MAXIMUM_CHANNELS        32

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

typedef struct _devices {
    t_symbol *d_in [DEVICES_MAXIMUM_IO];
    t_symbol *d_out[DEVICES_MAXIMUM_IO];
    int d_default;
    } t_devices;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#if defined ( PD_BUILDING_APPLICATION )

void        devices_set     (t_devices *d, const juce::StringArray&, const juce::StringArray&);

#endif

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void        devices_initialize                  (t_devices *d);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void        devices_copy                        (t_devices *d, t_devices *from);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

int         devices_setDefaultAudio             (t_devices *d);
int         devices_setDefaultMidi              (t_devices *d);

t_error     devices_checkAudio                  (t_devices *d);
t_error     devices_checkMidi                   (t_devices *d);

void        devices_logAudio                    (t_devices *p, t_error err);
void        devices_logMidi                     (t_devices *p, t_error err);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

int         devices_hasDefault                  (t_devices *d);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

int         devices_getTotalOfChannelsIn        (t_devices *d);
int         devices_getTotalOfChannelsOut       (t_devices *d);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

t_symbol    *devices_getInName                  (t_devices *d, int n);
t_symbol    *devices_getOutName                 (t_devices *d, int n);

int         devices_getInSize                   (t_devices *d);
int         devices_getOutSize                  (t_devices *d);
int         devices_getInChannels               (t_devices *d, int n);
int         devices_getOutChannels              (t_devices *d, int n);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
#endif // S_DEVICES_H_
