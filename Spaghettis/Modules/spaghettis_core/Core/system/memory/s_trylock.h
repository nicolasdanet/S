
/* Copyright (c) 1997 Miller Puckette and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#ifndef S_TRYLOCK_H_
#define S_TRYLOCK_H_

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

/* < https://forum.juce.com/t/is-it-safe-to-use-std-try-lock-or-scopedtrylock-on-the-realtime-thread > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#define TRYLOCK_EXPERIMENTAL    1

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#if TRYLOCK_EXPERIMENTAL

    #if defined ( __cplusplus )

        #include <atomic>
        
        typedef std::atomic_flag t_trylock;
            
    #else

        #include <stdatomic.h>
        
        typedef atomic_flag t_trylock;
        
    #endif

#else

    typedef pthread_mutex_t t_trylock;
    
#endif // TRYLOCK_EXPERIMENTAL

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void   trylock_init    (t_trylock *t);
void   trylock_destroy (t_trylock *t);
int    trylock_trylock (t_trylock *t);
void   trylock_lock    (t_trylock *t);
void   trylock_unlock  (t_trylock *t);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
#endif // S_TRYLOCK_H_
