
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace core {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Tree {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit Tree (const juce::Identifier& type) : tree_ (type)
    {
    }
    
    ~Tree() = default;
        
public:
    Tree (const Tree&) = default;
    Tree (Tree&&) = default;
    Tree& operator = (const Tree&) = default;
    Tree& operator = (Tree&&) = default;

private:
    explicit Tree (const juce::ValueTree& tree) : tree_ (tree)
    {
    }
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void addListener (Listener* listener)
    {
        tree_.addListener (listener);
    }
    
public:
    juce::ValueTree getValueTree() const
    {
        return tree_;
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    juce::var getValue (const juce::String&, const juce::String&) const;
    
    void changeValue (const juce::String&, const juce::String&, const juce::var&);
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    Group addGroup (const juce::String&);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    bool  hasGroup (const juce::String&) const;
    Group getGroup (const juce::String&) const;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void setParametersFrom (const juce::ValueTree&);
    
    void write (const juce::File&) const;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    bool isValid (const juce::Identifier&) const;

private:
    juce::ValueTree tree_;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace core

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
