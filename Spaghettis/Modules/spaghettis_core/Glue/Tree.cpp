
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace core {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

juce::var Tree::getValue (const juce::String& group, const juce::String& key) const
{
    return juce::var();
}
    
void Tree::setValue (const juce::String& group, const juce::String& key, const juce::var& v)
{

}
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

Group Tree::addGroup (const juce::String& name)
{
    juce::ValueTree group (Ids::GROUP); group.setProperty (Ids::name, name, nullptr);
        
    tree_.appendChild (group, nullptr);
        
    return Group (group);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void Tree::setParametersFrom (const juce::ValueTree& other)
{
    if (Tree (other).isValid (tree_.getType())) {
    //
    for (const auto& group : other) {
        const juce::String name (Group (group).getName());
        for (const auto& parameter : group) {
            setValue (name, Parameter (parameter).getKey(), Parameter (parameter).getValue());
        }
    }
    //
    }
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

bool Tree::isValid (const juce::Identifier& identifier) const
{
    if (!tree_.isValid() || !tree_.hasType (identifier)) { return false; }
    
    for (const auto& group : tree_) {
        if (!Group (group).isValid()) { return false; }
    }

    return true;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace core

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
