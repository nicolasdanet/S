
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace core {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

struct Object {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static UniqueId getIdentifier (const juce::ValueTree& t)
{
    jassert (t.hasType (Ids::OBJECT));
    
    return cast::fromVar<core::UniqueId> (t.getProperty (Ids::identifier));
}

template <class T> static T getAttribute (const juce::ValueTree& t, const juce::String &name)
{
    jassert (t.hasType (Ids::OBJECT));
    
    const Parameter p (Tree (t.getChildWithName (Ids::DATA)).getParameter (Tags::Attributes, name));
    
    jassert (p.getType() == ParameterType<T>::get());

    return cast::fromVar<T> (p.getValue());
}

static void copyFrom (juce::ValueTree& t, const core::Description& v)
{
    jassert (t.hasType (Ids::OBJECT));
    
    Tree (t.getChildWithName (Ids::DATA)).copyFrom (v);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace core

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
