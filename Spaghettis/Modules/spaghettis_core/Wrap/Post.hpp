
/* Copyright (c) 2021 Nicolas Danet. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Post {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

using MessagesElement   = std::pair<juce::String, Logger::Type>;
using MessagesContainer = std::vector<MessagesElement>;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

public:
    Post() = default;
    ~Post() = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void add (const juce::String& m, Logger::Type type)
    {
        const juce::ScopedLock lock (lock_); messages_.emplace_back (m, type);
    }
    
    void log (Logger *l)
    {
        MessagesContainer scoped;
        
        {
            const juce::ScopedLock lock (lock_); scoped.swap (messages_);
        }
        
        if (l) { for (const auto& e : scoped) { l->logMessage (std::get<0> (e), std::get<1> (e)); } }
    }
    
private:
    MessagesContainer messages_;
    juce::CriticalSection lock_;

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Post)
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
