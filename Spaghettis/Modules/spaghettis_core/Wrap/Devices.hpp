
/* Copyright (c) 2021 Nicolas Danet. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

using AudioDevice = std::pair<juce::String, int>;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class AudioDevices : public juce::ChangeBroadcaster {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    enum {
        AUDIODEVICES_NAME       = 0,
        AUDIODEVICES_CHANNELS   = 1
    };
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    AudioDevices()  = default;
    ~AudioDevices() = default;

public:
    void setAvailableDevices (std::vector<AudioDevice>, std::vector<AudioDevice>);
    void setCurrentDevices (std::vector<AudioDevice>, std::vector<AudioDevice>);

public:
    juce::StringArray getAvailableNamesIn();
    juce::StringArray getAvailableNamesOut();
    
private:
    static void report (const std::vector<AudioDevice>&, const juce::String&);
    static juce::StringArray getNames (const std::vector<AudioDevice>&);
    
private:
    std::vector<AudioDevice> availableDevicesIn_;
    std::vector<AudioDevice> availableDevicesOut_;
    std::vector<AudioDevice> currentDevicesIn_;
    std::vector<AudioDevice> currentDevicesOut_;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (AudioDevices)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

