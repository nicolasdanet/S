
/* Copyright (c) 2021 Nicolas Danet. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Logger {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    enum class Type { normal, system, warning, error };

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

using MessagesElement = std::tuple<juce::String, Logger::Type, Unique>;
using MessagesPacket  = std::vector<Logger::MessagesElement>;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    virtual ~Logger()
    {
    }

protected:
    Logger() = default;
    
    Logger (const Logger&) = default;
    Logger (Logger&&) = default;
    Logger& operator = (const Logger&) = default;
    Logger& operator = (Logger&&) = default;

public:
    virtual void logMessage (MessagesPacket& m) = 0;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    static juce::String getText (const MessagesElement& e)
    {
        return std::get<0> (e);
    }
    
    static Type getType (const MessagesElement& e)
    {
        return std::get<1> (e);
    }
    
    static Unique getUnique (const MessagesElement& e)
    {
        return std::get<2> (e);
    }
};

        
        /*
        if (showMessages == false || showErrors == false) {
        //
        auto f = [](const Logger::MessagesElement& e)
        {
            Type t = std::get<1> (e);
            
            return false;
        };
        
        m.erase (std::remove_if (m.begin(), m.end(), f), m.end());
        //
        }
        */
        
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
