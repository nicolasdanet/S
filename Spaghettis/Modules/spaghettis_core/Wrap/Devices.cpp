
/* Copyright (c) 2021 Nicolas Danet. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

juce::StringArray AudioDevices::getNames (const std::vector<AudioDevice>& devices)
{
    juce::StringArray a; for (const auto& d : devices) { a.add (std::get<AUDIODEVICES_NAME> (d)); }
    
    a.sortNatural();
    
    return a;
}

juce::String AudioDevices::getNameAt (const std::vector<AudioDevice>& devices, int i)
{
    jassert (i >= 0); const std::vector<AudioDevice>::size_type n = i;
    
    if (n < devices.size()) { return std::get<AUDIODEVICES_NAME> (devices[i]); }
    
    return juce::String();
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void AudioDevices::setDevice (const juce::String& type, const juce::String& name)
{
    DBG (type + " / " + name);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
