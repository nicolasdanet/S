
/* Copyright (c) 2022 Spaghettis and others. */

/* < https://www.gnu.org/licenses/agpl-3.0.en.html > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace spaghettis::core {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

class Object : public Item {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit Object (const juce::ValueTree& t) : Item (t)
    {
        jassert (isObject());
    }

public:
    ~Object() = default;

public:
    Object (const Object&) = default;
    Object (Object&&) = default;
    Object& operator = (const Object&) = default;
    Object& operator = (Object&&) = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    std::optional<PresetElement> getPresetElement() const;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    bool isGraphic() const
    {
        return getData().hasGroup (Tag::Parameters);
    }

    bool isAbstraction() const
    {
        return isPatch() && get<bool> (Tag::Attributes, Tag::Abstraction);
    }
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    data::Group getCopyOfParameters() const;

private:
    JUCE_LEAK_DETECTOR (Object)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
