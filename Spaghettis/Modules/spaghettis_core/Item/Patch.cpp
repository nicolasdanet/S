
/* Copyright (c) 2021 Spaghettis and others. */

/* < https://www.gnu.org/licenses/agpl-3.0.en.html > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis::core {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

void moveChildAt (juce::ValueTree& tree, int i, core::UniqueId u)
{
    const int n = tree.indexOf (Tree::getChild (tree, u));
    
    jassert (n != -1);
    
    tree.moveChild (n, i, nullptr);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void Patch::sortObjects (const std::vector<core::UniqueId>& v)
{
    int i = 1;     /* Notice that DATA node is the first. */
    
    /* Check it? */
    
    for (auto u : v) { moveChildAt (tree_, i++, u); }
}

std::vector<core::UniqueId> Patch::getObjects() const
{
    std::vector<core::UniqueId> v;
    
    for (const auto& child : tree_) {
        if (Tree::isObject (child)) { v.push_back (core::Object (child).getIdentifier()); }
    }
    
    return v;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

/* Notice that DATA node is the first. */

int Patch::getIndexOfObject (const Object& object) const
{
    return tree_.indexOf (object.getTree()) - 1;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
