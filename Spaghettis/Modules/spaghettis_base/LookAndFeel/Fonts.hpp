
/* Copyright (c) 2021 Spaghettis and others. */

/* < https://www.gnu.org/licenses/agpl-3.0.en.html > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class FontsOwner : private juce::DeletedAtShutdown {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    FontsOwner();
    
    ~FontsOwner()
    {
        clearSingletonInstance();
    }

    JUCE_DECLARE_SINGLETON_SINGLETHREADED (FontsOwner, true);
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    juce::Font getFont() const;
    juce::Font getFontRescaled (float scale);
    juce::Font getFontWithHeight (int height);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    juce::Font getMonospacedFont() const;
    juce::Font getMonospacedFontRescaled (float scale);
    juce::Font getMonospacedFontWithHeight (int height);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    juce::Font getBoldFont() const;
    juce::Font getBoldFontRescaled (float scale);
    juce::Font getBoldFontWithHeight (int height);
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

private:
    juce::Font font_;
    juce::Font fontBold_;
    juce::Font fontMonospaced_;
    
private:
    std::vector<FontsElement> fonts_;
    std::vector<FontsElement> fontsBold_;
    std::vector<FontsElement> fontsMonospaced_;
    
private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (FontsOwner)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

struct Fonts {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static juce::Font getFont()
{
    return FontsOwner::getInstance()->getFont();
}

static juce::Font getFontRescaled (float scale)
{
    return FontsOwner::getInstance()->getFontRescaled (scale);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static juce::Font getMonospacedFont()
{
    return FontsOwner::getInstance()->getMonospacedFont();
}

static juce::Font getMonospacedFontWithHeight (int height)
{
    return FontsOwner::getInstance()->getMonospacedFontWithHeight (height);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static juce::Font getMenuFont()
{
    return getFont();
}

static juce::Font getMenuShortcutsFont()
{
    return getMonospacedFont();
}

static juce::Font getTooltipsFont()
{
    return FontsOwner::getInstance()->getBoldFontWithHeight (16);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
