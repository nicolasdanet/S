
/* Copyright (c) 2023 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

juce::Colour getColourForType (Logger::Type type)
{
    Colours::ColourIds c = Colours::consoleTextError;
                
    if (type == Logger::Type::normal)       { c = Colours::consoleTextDefault; }
    else if (type == Logger::Type::system)  { c = Colours::consoleTextSystem;  }
    else if (type == Logger::Type::warning) { c = Colours::consoleTextWarning; }
                
    return Colours::fetchColour (c);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

juce::Colour ListBoxFunctions::getColourForElement (const Logger::MessagesElement& e, bool isSelected)
{
    if (isSelected) {
    
        core::UniquePath p = Logger::getUniquePath (e);
        
        if (p.isValid()) {
            if (Spaghettis()->getPatches().contains (p)) {
                return Spaghettis()->getColour (Colours::listBoxTextHighlighted);
            }
        }
    }

    return getColourForType (Logger::getType (e));
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

