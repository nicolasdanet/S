
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class CachedColour : private juce::Value::Listener {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    CachedColour (const core::Tree& tree, const juce::String& group, const juce::String& key) :
        value_ (tree.getValueSource (group, key))
    {
        value_.addListener (this);
    }
    
    ~CachedColour() = default;

public:
    CachedColour (CachedColour&&) = default;
    CachedColour& operator = (CachedColour&&) = default;
    
public:
    CachedColour (const CachedColour&) = delete;
    CachedColour& operator = (const CachedColour&) = delete;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void valueChanged (juce::Value& value) override
    {
        DBG ("?");
    }
    
private:
    juce::Value value_;
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

