
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

core::Data getForClass (const juce::String& c)
{
    core::Data documentation    = core::Data (Ids::DOCUMENTATION);
    const juce::String name     = juce::String ("info_") + c + juce::String ("_xml");
    int n = 0; const char* data = BinaryData::getNamedResource (name.toRawUTF8(), n);
    
    if (n && data) {
    //
    documentation.setFromXML (juce::String::createStringFromData (data, n));
    //
    }
    
    DBG (core::Data::debug (documentation));
        
    return documentation;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

core::Item Documentation::copy (const core::Item& item)
{
    core::Item i (core::Item::createCopy (item));
    
    if (i.isObject() && !i.isPatch()) {
        core::Data d (getForClass (i.get<juce::String> (Tags::Attributes, Tags::Class)));
    }
    
    return i;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
