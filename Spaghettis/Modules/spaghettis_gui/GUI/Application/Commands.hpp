
/* Copyright (c) 2021 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#define SPAGHETTIS_COMMAND(c)   (c | 0x7f000000)

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

struct Commands {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

enum CommandIds : juce::CommandID {
    preferences     = SPAGHETTIS_COMMAND (0),
    newPatch,
    openPatch,
    clearRecentFiles,
    paths,
    rescan,
    rescanLogged,
    clearConsole,
    zoomIn,
    zoomOut,
    zoomReset,
    devices,
    dspSwitch
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

enum BaseIds : int {
    recentFiles     = 100
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static void getCommandInfo (const juce::CommandID, juce::ApplicationCommandInfo&);
static void getAllCommands (juce::Array<juce::CommandID>&);
static void getApplicationCommands (juce::Array<juce::CommandID>&);
static bool perform (const juce::ApplicationCommandTarget::InvocationInfo&);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
