
/* Copyright (c) 2023 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Suggestion {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit Suggestion (const juce::String& s, int k) : s_ (s), k_ (k)
    {
    }
    
    ~Suggestion() = default;

    Suggestion (const Suggestion&) = default;
    Suggestion (Suggestion&&) = default;
    Suggestion& operator = (const Suggestion&) = default;
    Suggestion& operator = (Suggestion&&) = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    bool operator < (const Suggestion& e) const
    {
        return k_ < e.k_;
    }
    
    operator juce::String() const
    {
        return s_;
    }
    
private:
    juce::String s_;
    int k_;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Autocomplete {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit Autocomplete();
    
    ~Autocomplete() = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void addContent (const juce::String&);
    
    juce::StringArray getContent (const juce::String& key = juce::String());

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    juce::StringArray getContentByKey (const juce::String&);
    
private:
    juce::StringArray content_;
    bool hasChanged_;

private:
    juce::Array<Suggestion> v_;     /* Cached to avoid memory allocations. */
    
private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Autocomplete)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

