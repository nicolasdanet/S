
/* Copyright (c) 2021 Nicolas Danet. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class SpaghettisInstance {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    SpaghettisInstance()
    {
    }
    
    ~SpaghettisInstance()
    {
        clearSingletonInstance();
    }

    JUCE_DECLARE_SINGLETON (SpaghettisInstance, true)
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    LookAndFeel* getLookAndFeel() const
    {
        return &lookAndFeel_->lf_;
    }

public:
    juce::SharedResourcePointer < LookAndFeelShared > lookAndFeel_;

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (SpaghettisInstance)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    Spaghettis (bool ownership = false) : owned_ (ownership), spaghettis_ (SpaghettisInstance::getInstance())
    {
        jassert (spaghettis_ != nullptr);
    }
    
    ~Spaghettis()
    {
        if (owned_) { SpaghettisInstance::deleteInstance(); } spaghettis_ = nullptr;
    }
    
public:
    SpaghettisInstance* operator ->() const
    {
        jassert (SpaghettisInstance::getInstanceWithoutCreating() != nullptr);
        
        return spaghettis_;
    }

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Spaghettis)
    
private:
    bool owned_;
    SpaghettisInstance *spaghettis_;
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
