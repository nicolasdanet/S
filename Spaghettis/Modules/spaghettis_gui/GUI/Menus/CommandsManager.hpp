
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class CommandsManager {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

public:
    CommandsManager()  = default;
    ~CommandsManager() = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void set (MenuCommand);
    bool perform (const juce::ApplicationCommandTarget::InvocationInfo&);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    bool has (juce::CommandID);
    bool invoke (const juce::ApplicationCommandTarget::InvocationInfo&);
    juce::String name (juce::CommandID, juce::String);
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void getInfo (juce::CommandID, juce::ApplicationCommandInfo&);
    void getCommands (juce::Array<juce::CommandID>&, bool application = false);
    bool performCommand (const juce::ApplicationCommandTarget::InvocationInfo&);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    juce::String getCommandText (juce::CommandID);
    juce::String getCommandDescription (juce::CommandID);
    
private:
    std::vector<MenuCommand> enabled_;
    
private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (CommandsManager)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
