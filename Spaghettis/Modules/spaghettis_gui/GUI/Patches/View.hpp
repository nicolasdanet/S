
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class ObjectComponent;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

class View :    public juce::Component,
                public juce::ValueTree::Listener {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

public:
    explicit View (Patch& patch, const juce::ValueTree& tree) : patch_ (patch), viewTree_ (tree)
    {
    }
    
    virtual ~View() = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

public:
    virtual ObjectComponent* getObjectComponent (core::UniqueId) = 0;

public:
    virtual void show (ObjectComponent*, const juce::Rectangle<int>&) = 0;
    virtual void hide (ObjectComponent*) = 0;

public:
    virtual float getScale() const = 0;
    
public:
    virtual juce::Rectangle<int> getPaintedAreaFromBounds (const juce::Rectangle<int>&) = 0;
    virtual juce::Rectangle<int> getBoundsFromPaintedArea (const juce::Rectangle<int>&) = 0;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    Patch& getPatch() const
    {
        return patch_;
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    Patch& patch_;
    
protected:
    juce::ValueTree viewTree_;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (View)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

