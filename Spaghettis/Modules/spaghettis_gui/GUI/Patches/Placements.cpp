
/* Copyright (c) 2023 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

auto hasSameIdentifier (core::UniqueId u)
{
    return [u](const PlacementsElement& e)
    {
        return (e.getUnique() == u);
    };
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void Placements::set (core::UniqueId u, core::Point::Real offset, int zoom)
{
    const PlacementsElement e (u, offset, zoom);
    
    auto r = std::find_if (v_.begin(), v_.end(), hasSameIdentifier (e.getUnique()));
    
    if (r != v_.end()) { *r = e; } else { v_.push_back (e); }
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

PlacementsElement Placements::get (core::UniqueId u) const
{
    auto r = std::find_if (v_.begin(), v_.end(), hasSameIdentifier (u));
    
    if (r != v_.end()) { return *r; }
    else {
        return PlacementsElement (0, core::Point::Real (0, 0), 100);
    }
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
