
/* Copyright (c) 2023 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

auto hasSameIdentifier (core::UniqueId u)
{
    return [u](const WindowsBounds::BoundsElement& e)
    {
        return (std::get<WindowsBounds::BOUNDS_ID> (e) == u);
    };
}

auto hasSameIdentifier (WindowsBounds::BoundsElement e)
{
    return hasSameIdentifier (std::get<WindowsBounds::BOUNDS_ID> (e));
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void WindowsBounds::set (BoundsElement e)
{
    auto r = std::find_if (bounds_.begin(), bounds_.end(), hasSameIdentifier (e));
    
    if (r != bounds_.end()) { *r = e; } else { bounds_.push_back (e); }
}

WindowsBounds::BoundsElement WindowsBounds::get (core::UniqueId u) const
{
    auto r = std::find_if (bounds_.begin(), bounds_.end(), hasSameIdentifier (u));
    
    if (r != bounds_.end()) { return *r; } else { return { 0, core::Point::Real (0, 0), 100 }; }
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
