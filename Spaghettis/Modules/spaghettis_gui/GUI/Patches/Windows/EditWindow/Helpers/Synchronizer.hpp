
/* Copyright (c) 2023 Spaghettis and others. */

/* < https://www.gnu.org/licenses/agpl-3.0.en.html > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

class InspectorView;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Synchronizer : private data::Observer {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit Synchronizer (const core::Item&);
    
    Synchronizer (Synchronizer&&);
        
    ~Synchronizer() = default;
    
public:
    Synchronizer (const Synchronizer&) = delete;
    Synchronizer& operator = (const Synchronizer&) = delete;
    Synchronizer& operator = (Synchronizer&&) = delete;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    data::Data getData() const;
    core::UniqueId getIdentifier() const;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void bind (InspectorView*);
    void unbind (InspectorView*);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    virtual void parameterHasChanged (const data::Group&, const data::Parameter&) override;
    
private:
    core::Item source_;
    data::Data data_;

private:
    InspectorView* observer_;
    
private:
    JUCE_LEAK_DETECTOR (Synchronizer)
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
