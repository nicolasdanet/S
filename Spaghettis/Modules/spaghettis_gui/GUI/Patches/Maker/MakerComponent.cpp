
/* Copyright (c) 2023 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

MakerComponent::MakerComponent (EditView* view, const juce::Value& v, core::Point::Real pt) :
    entry_ (*this, v),
    list_ (*this, v),
    documentation_ (v),
    view_ (view),
    v_ (v),
    pt_ (pt)
{
    addAndMakeVisible (entry_);
    addAndMakeVisible (list_);
    addAndMakeVisible (documentation_);
    
    setOpaque (true); setSize (700, 300);
}

MakerComponent::~MakerComponent()
{
    Maker::setActive (v_, false);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

int getMakerEntryHeight()
{
    return static_cast<int> (Spaghettis()->getLookAndFeel().getMakerEntryFont().getHeight() * 1.75);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void MakerComponent::paint (juce::Graphics& g)
{
    g.fillAll (Colours::fetchColour (Colours::callOutBoxBackground));
}

void MakerComponent::resized()
{
    juce::Rectangle<int> area (getLocalBounds().reduced (margin_));
    
    entry_.setBounds (area.removeFromTop (getMakerEntryHeight()).reduced (space_));
    list_.setBounds (area.removeFromLeft (area.getWidth() / 3).reduced (space_));
    documentation_.setBounds (area);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void MakerComponent::enter()
{
    if (view_.getComponent()) { view_->handleMaker (pt_, v_.toString()); }
}

void MakerComponent::dismiss()
{
    if (view_.getComponent()) { view_->dismissMaker(); }
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

bool MakerComponent::keyPressed (const juce::KeyPress& key)
{
    if (key.isKeyCode (juce::KeyPress::returnKey)) { enter(); return true; }
    
    return false;
}
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
