
/* Copyright (c) 2023 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

core::Cached<juce::Colour> getContentColour (const core::Object& o)
{
    DBG (o.get<juce::String> (Tag::Attributes, Tag::Content));
    
    return Spaghettis()->getCachedColour (Tag::PinAnything);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

InletPainter::InletPainter (ObjectComponent* owner) :
    PainterPolicy (owner),
    boxBackgroundColour_ (Spaghettis()->getCachedColour (Tag::BoxBackground)),
    arrowColour_ (getContentColour (object_))
{
    boxBackgroundColour_.attach (repaint (component_));
    arrowColour_.attach (repaint (component_));
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void InletPainter::paintObject (juce::Rectangle<int> r, juce::Graphics& g)
{
    g.setColour (boxBackgroundColour_.get());
    g.fillRect (r);
    g.setColour (arrowColour_.get());
    LookAndFeel::drawArrowOpened (g, r);
}

juce::Rectangle<int> InletPainter::getRequiredBoundsForObject()
{
    const int w = getFont().getHeight();
    
    return getRequiredBoundsForObjectFromVector (core::Vector::Scaled (w, w, getScale()));
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
