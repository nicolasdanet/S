
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

class ObjectComponent;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class PainterStrategy : public juce::MouseListener {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit PainterStrategy (ObjectComponent*);
    
    virtual ~PainterStrategy() = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    core::Object& getObject();
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    virtual void paintWidget (juce::Rectangle<int>, juce::Graphics&) = 0;
    virtual juce::Rectangle<int> getRequiredBoundsForWidget() = 0;

public:
    void paint (juce::Rectangle<int>, juce::Graphics&);
    juce::Rectangle<int> getRequiredBounds();
    int getWidgetWidth() const;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    virtual std::optional<core::Vector::Real> getDimensions();
    virtual void setDimensions (core::Vector::Real);
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    virtual juce::Colour getPinsBackgroundColour();

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

protected:
    float getScale() const;
    core::Point::Scaled getPosition() const;
    core::UniqueId getIdentifier() const;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

protected:
    juce::Rectangle<int> getRequiredBoundsFromDimensions();
    juce::Rectangle<int> getRequiredBoundsFromVector (core::Vector::Scaled);
    juce::Rectangle<int> getRequiredBoundsFromText (const juce::String&, const juce::Font&, int extra = 0);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

protected:
    void paintText (juce::Rectangle<int>,
            juce::Graphics&,
            const juce::String&,
            const juce::Font&,
            juce::Justification);
                    
    void paintTextAsDigits (juce::Rectangle<int>,
            juce::Graphics&,
            const juce::String&,
            const juce::Font&);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

protected:
    void setDimensionsByParameters (core::Vector::Real);
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

protected:
    ObjectComponent* component_;

private:
    core::Object object_;
    data::Cached<juce::Colour> boxPinsBackgroundColour_;
    data::Cached<juce::Colour> patchLabelBackgroundColour_;
    data::Cached<juce::Colour> patchLabelTextColour_;
    int widgetWidth_;

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (PainterStrategy)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

