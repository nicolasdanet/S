
/* Copyright (c) 2021 Nicolas Danet. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Patch {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit Patch (const core::Unique& u, const core::Description& v) : p_ (v.getTree())
    {
        jassert (p_.getProperty (Ids::type).equalsWithSameType ("patch"));

        p_.setProperty (Ids::identifier, core::Unique::Converter::toVar (u.getIdentifier()), nullptr);
    }

    ~Patch()
    {
        DBG ("Dtor");
        
        const juce::var v (p_.getProperty (Ids::identifier));
        
        Spaghettis()->handle (Inputs::closePatch (core::Unique::Converter::fromVar (v), false));
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void addObject (const core::Unique& u, const core::Description& v)
    {
        // DBG ("Add"); DBG (v.debug()); DBG (u.debug());
    }
    
    void removeObject (const core::Unique& u)
    {
        // DBG ("Remove"); DBG (u.debug());
    }
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    juce::ValueTree p_;

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Patch)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

