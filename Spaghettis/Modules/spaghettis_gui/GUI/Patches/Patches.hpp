
/* Copyright (c) 2021 Nicolas Danet. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Patches {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

public:
    using RootsElement = std::pair<core::Unique::Identifier, std::unique_ptr<Patch>>;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    Patches()  = default;
    ~Patches() = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

public:
    void addObject (const core::Unique& u, const core::Description& v)
    {
        jassert (u.isValid());

        if (u.isRoot()) { createPatch (u, v); }
        else {
            Patch* p = fetchPatch (u); if (p) { p->addObject (u, v); }
        }
    }

    void removeObject (const core::Unique& u)
    {
        jassert (u.isValid());

        if (u.isRoot()) { destroyPatch (u); }
        else {
            Patch* p = fetchPatch (u); if (p) { p->removeObject (u); }
        }
    }

    void renameObject (const core::Unique& u, core::Unique::Identifier i)
    {
        jassert (u.isValid());
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void closeAll();
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    void createPatch (const core::Unique& u, const core::Description& v);
    void destroyPatch (const core::Unique& u);
    
private:
    Patch* fetchPatch (const core::Unique& u) const;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    std::vector<RootsElement> roots_;

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Patches)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

