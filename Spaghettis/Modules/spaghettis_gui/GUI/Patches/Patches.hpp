
/* Copyright (c) 2021 Nicolas Danet. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Patches {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    Patches()  = default;
    ~Patches() = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

public:
    void addObject (core::Unique u, core::Description v)
    {
        jassert (u.isValid());
        
        if (u.isRoot()) { createPatch (u, v); }
        else {
            fetchPatch (u);
        }
    }

    void removeObject (core::Unique u)
    {
        jassert (u.isValid());
    }

    void renameObject (core::Unique u, core::Unique::Identifier i)
    {
        jassert (u.isValid());
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    void createPatch (core::Unique u, core::Description v)
    {
        roots_.push_back (std::make_unique<Patch> (u, v));
    }
    
    Patch* fetchPatch (core::Unique u) const
    {
        auto f = [&] (const std::unique_ptr<Patch>& p)
        {
            return (p->getUniqueIdentifier() == u.getRoot());
        };
        
        auto r = std::find_if (roots_.cbegin(), roots_.cend(), f);
        
        return r != roots_.end() ? r->get() : nullptr;
    }
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    std::vector<std::unique_ptr<Patch>> roots_;

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Patches)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

