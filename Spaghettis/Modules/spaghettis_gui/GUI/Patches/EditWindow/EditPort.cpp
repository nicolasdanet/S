
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

float computeDeltaFromMove (float f)
{
    /* At least one step increment. */
    
    return std::signbit (f) ? juce::jmin (-1.0f, f) : juce::jmax (1.0f, f);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void EditPort::mouseWheelMove (const juce::MouseEvent &e, const juce::MouseWheelDetails &wheel)
{
    const float step = 100.0f;
    const float x    = (wheel.isReversed ? -wheel.deltaX : wheel.deltaX) * step;
    const float y    = (wheel.isReversed ? -wheel.deltaY : wheel.deltaY) * step;

    scroll (x, y);
}

void EditPort::scroll (float x, float y)
{
    if (x) { x_ += static_cast<int> (computeDeltaFromMove (x)); }
    if (y) { y_ += static_cast<int> (computeDeltaFromMove (y)); }
    
    apply();
}

void EditPort::apply()
{
    view_.setBounds (core::Canvas::getBounds().translated (x_, y_));
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
