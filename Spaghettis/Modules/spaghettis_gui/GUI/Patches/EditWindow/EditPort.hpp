
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class EditPort : public juce::Component {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit EditPort (EditView& view) : view_ (view), zoom_ (100)
    {
        view_.setOwner (this);
        
        addAndMakeVisible (&view_);
    }
    
    ~EditPort()
    {
        removeChildComponent (&view_);
        
        view_.setOwner (nullptr);
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    juce::Rectangle<int> getVisibleAreaInPatch() const;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void setZoom (int n)
    {
        constexpr int min = steps_.front();
        constexpr int max = steps_.back();
    
        zoom_ = juce::var (juce::jlimit (min, max, n)); view_.setScale (getScale());
    }
    
    int getZoom() const
    {
        return static_cast <int> (zoom_.getValue());
    }
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    juce::Value getZoomAsValue() const
    {
        return zoom_;
    }
    
    float getScale() const
    {
        return getZoom() / 100.0f;
    }
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void zoomIn();
    void zoomOut();
    void zoomReset();

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void mouseWheelMove (const juce::MouseEvent&, const juce::MouseWheelDetails&) override;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    void zoom (int n);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

private:
    void update();
    
private:
    juce::Point<float> getOrigin() const;
    juce::Point<float> getCentralPoint() const;
    void setOrigin (juce::Point<float>);
    void setCentralPoint (juce::Point<float>);

private:
    EditView& view_;
    juce::Value zoom_;
    juce::Point<float> origin_;

private:
    static constexpr std::array<int, 16> steps_ =
        {
            30, 50, 70, 80, 90, 100, 110, 120, 130, 150, 170, 200, 240, 300, 400, 500
        };
        
private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (EditPort)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

