
/* Copyright (c) 2023 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

ContextMenu::ContextMenu (EditView* view) : view_ (view)
{

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

juce::PopupMenu::Options getContextMenuOptions (ObjectComponent* c)
{
    return juce::PopupMenu::Options().withDeletionCheck (*c);
}

juce::PopupMenu getContextMenu (ObjectComponent* c)
{
    juce::PopupMenu m;
    
    m.addItem (1, NEEDS_TRANS ("Help"));
    m.addSeparator();
    m.addItem (2, NEEDS_TRANS ("Open"), false);
    m.addSeparator();
    m.addItem (4, NEEDS_TRANS ("Move Back"));
    m.addItem (5, NEEDS_TRANS ("Move Front"));
    m.addItem (3, NEEDS_TRANS ("Snap"));
    
    return m;
}

auto contextMenuCallback (ObjectComponent* c, EditView* view)
{
    return [p = WeakPointer<EditView> (view), o = WeakPointer<ObjectComponent> (c)] (int result)
        {
            if (p.getComponent() && o.getComponent()) { DBG ("!!!"); }
        };
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void ContextMenu::open (const juce::MouseEvent&, ObjectComponent* c)
{
    const juce::PopupMenu::Options options (getContextMenuOptions (c));
    
    juce::PopupMenu m (getContextMenu (c));
    
    m.showMenuAsync (options, contextMenuCallback (c, view_));
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
