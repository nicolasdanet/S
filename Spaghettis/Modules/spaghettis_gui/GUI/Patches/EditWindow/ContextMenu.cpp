
/* Copyright (c) 2023 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

ContextMenu::ContextMenu (EditView* view) : view_ (view)
{

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

enum ContextMenuItems {
    none    = 0,
    help,
    open,
    back,
    front,
    snap
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

juce::PopupMenu::Options getContextMenuOptions (ObjectComponent* c)
{
    return juce::PopupMenu::Options().withDeletionCheck (*c);
}

juce::PopupMenu getContextMenu (ObjectComponent* c)
{
    juce::PopupMenu m;
    
    m.addItem (ContextMenuItems::help,  NEEDS_TRANS ("Help"));
    m.addSeparator();
    m.addItem (ContextMenuItems::open,  NEEDS_TRANS ("Open"), false);
    m.addSeparator();
    m.addItem (ContextMenuItems::back,  NEEDS_TRANS ("Move Back"));
    m.addItem (ContextMenuItems::front, NEEDS_TRANS ("Move Front"));
    m.addItem (ContextMenuItems::snap,  NEEDS_TRANS ("Snap"));
    
    return m;
}

auto contextMenuCallback (ObjectComponent* c, EditView* view)
{
    auto f = [p = WeakPointer<EditView> (view), o = WeakPointer<ObjectComponent> (c)] (int result)
    {
        if (p.getComponent() && o.getComponent()) { DBG ("!!!"); }
    };
        
    return f;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void ContextMenu::open (const juce::MouseEvent&, ObjectComponent* c)
{
    const juce::PopupMenu::Options options (getContextMenuOptions (c));
    
    juce::PopupMenu m (getContextMenu (c));
    
    m.showMenuAsync (options, contextMenuCallback (c, view_));
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
