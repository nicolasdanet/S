
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class PatchWindow : public BaseWindow {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit PatchWindow (Patch& owner, const juce::ValueTree& content) :
        BaseWindow (core::Description::getAttribute (content, Tags::Title).toString()),
        owner_ (owner),
        content_ (content)
    {
    }

    ~PatchWindow() = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    bool isRoot() const
    {
        return (content_.getParent().isValid() == false);
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void closeButtonPressed() override
    {
        owner_.closeWindowButtonPressed (this);
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    static Patch& getOwner (juce::Component *c)
    {
        PatchWindow* w = dynamic_cast<PatchWindow*> (c->getTopLevelComponent());
        
        jassert (w);
        
        return w->owner_;
    }
    
    static juce::ValueTree getContent (juce::Component *c)
    {
        PatchWindow* w = dynamic_cast<PatchWindow*> (c->getTopLevelComponent());
        
        jassert (w);
        
        return w->content_;
    }
    
private:
    Patch& owner_;

private:
    juce::ValueTree content_;

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (PatchWindow)
};
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
