
/* Copyright (c) 2021 Nicolas Danet. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

Patch* Patches::fetchPatch (core::Unique u) const
{
    auto f = [&] (const std::unique_ptr<Patch>& p)
    {
        return (p->getUniqueIdentifier() == u.getRoot());
    };
        
    auto r = std::find_if (roots_.cbegin(), roots_.cend(), f);
        
    return r != roots_.end() ? r->get() : nullptr;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void Patches::createPatch (core::Unique u, core::Description v)
{
    roots_.push_back (std::make_unique<Patch> (u, v));
}

void Patches::fetchAndAddObject (core::Unique u, core::Description v)
{
    Patch* p = fetchPatch (u);
    
    if (p) { }
    else {
        jassertfalse;
    }
}

void Patches::fetchAndRemoveObject (core::Unique u)
{
    Patch* p = fetchPatch (u);
    
    if (p) { }
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace spaghettis

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
