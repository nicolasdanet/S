
/* Copyright (c) 2022 Jojo and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class ParametersView : private juce::Timer {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit ParametersView (const data::Data& data, const ParametersBase& base) :
        data_ (data),
        expanded_ (0),
        expandedLast_ (0),
        base_ (base)
    {
        ViewCommon::buildConcertinaPanel (data_, base_, *this);
    }
    
    virtual ~ParametersView() = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    juce::Font getFont() const;
    
public:
    int getNumberOfPanels() const;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void requireExpandPanel (const juce::String& group = juce::String());

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    juce::ConcertinaPanel& getPanel();
    void resizePanel (const juce::Rectangle<int>&);

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void expandPanel (int);
    bool isExpanded (int);
    void timerCallback();
    
public:
    void addPanel (juce::PropertyPanel*);

private:
    juce::ConcertinaPanel panel_;

private:
    data::Data data_;
    int expanded_;
    int expandedLast_;
    juce::String requiredPanel_;

private:
    ParametersBase base_;

private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (ParametersView)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

