
/* Copyright (c) 2024 Spaghettis and others. */

/* < https://www.gnu.org/licenses/agpl-3.0.en.html > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

juce::String getLineTag (const juce::String& s)
{
    juce::String tag (Strings::upToWhitespace (s));
    
    return tag.endsWithChar (':') ? tag.dropLastCharacters (1) : juce::String();
}

juce::String getLineText (const juce::String& s)
{
    return Strings::fromWhitespace (s);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

InfoLine::InfoLine (const juce::String& s, const juce::Font& font) :
    font_ (font),
    tag_ (getLineTag (s)),
    text_ (tag_.isEmpty() ? s : getLineText (s))
{

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

namespace {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

void paintLineTag (juce::Graphics& g,
    const juce::Rectangle<int>& bounds,
    const juce::Font& font,
    const juce::String& text)
{
    // parametersInfoTagBackground
    
    g.setColour (Colours::fetchColour (Colours::parametersInfoTagText));
    g.setFont (font);
    g.drawText (text, bounds, juce::Justification::centredLeft, true);
}

void paintLineText (juce::Graphics& g,
    const juce::Rectangle<int>& bounds,
    const juce::Font& font,
    const juce::String& text)
{
    g.setColour (Colours::fetchColour (Colours::parametersInfoText));
    g.setFont (font);
    g.drawText (text, bounds, juce::Justification::centredLeft, true);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

void InfoLine::paint (juce::Graphics& g)
{
    juce::Rectangle<int> bounds (getLocalBounds());
    
    g.fillAll (Colours::fetchColour (Colours::parametersInfoBackground));
    
    if (tag_.isNotEmpty()) {
    //
    constexpr int w = 64;
    
    paintLineTag (g, bounds.removeFromLeft (w), font_, tag_);
    //
    }
    
    paintLineText (g, bounds, font_, text_);
}

void InfoLine::resized()
{

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
