
/* Copyright (c) 1997 Miller Puckette and others. */

/* < https://opensource.org/licenses/BSD-3-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

#ifndef M_PUNNING_64_SHARED_H_
#define M_PUNNING_64_SHARED_H_

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static inline void pun64_setLeastSignificantBytes (t_pun64* p, uint32_t i)
{
    p->z_u &= 0xffffffff00000000ULL;
    p->z_u |= (uint64_t)i;
}

static inline void pun64_setMostSignificantBytes (t_pun64* p, uint32_t i)
{
    p->z_u &= 0x00000000ffffffffULL;
    p->z_u |= (uint64_t)i << 32;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static inline uint32_t pun64_getLeastSignificantBytes (t_pun64* p)
{
    return (uint32_t)(p->z_u & 0x00000000ffffffffULL);
}

static inline uint32_t pun64_getMostSignificantBytes (t_pun64* p)
{
    return (uint32_t)(p->z_u >> 32);
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static inline uint64_t pun64_getLongInteger (t_pun64* p)
{
    return p->z_u;
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
#endif // M_PUNNING_64_SHARED_H_
