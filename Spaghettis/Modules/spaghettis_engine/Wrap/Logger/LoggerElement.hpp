
/* Copyright (c) 2024 Spaghettis and others. */

/* < https://www.gnu.org/licenses/agpl-3.0.en.html > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

enum class LoggerType { normal, system, warning, error };

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class LoggerElement {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit LoggerElement (const core::UniquePath& path, const juce::String& text, LoggerType type) :
        path_ (path),
        text_ (text),
        type_ (type)
    {
        // TODO: Make it trivially copyable for efficiency?
        
        static_assert (std::is_nothrow_move_constructible_v<LoggerElement> == true);
        static_assert (std::is_nothrow_move_assignable_v<LoggerElement> == true);
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    core::UniquePath getUniquePath() const
    {
        return path_;
    }
    
    juce::String getText() const
    {
        return text_;
    }
    
    LoggerType getType() const
    {
        return type_;
    }

private:
    core::UniquePath path_;
    juce::String text_;
    LoggerType type_;
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

using LoggerMessage = LoggerElement;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

