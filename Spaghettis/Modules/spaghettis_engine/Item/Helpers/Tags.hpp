
/* Copyright (c) 2022 Spaghettis and others. */

/* < https://www.gnu.org/licenses/agpl-3.0.en.html > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace spaghettis::core {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Tags {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit Tags() : hasAttributes_ (true), hasParameters_ (true), tags_()
    {
    }

private:
    Tags (bool attributes, bool parameters, juce::StringArray&& tags) :
        hasAttributes_ (attributes),
        hasParameters_ (parameters),
        tags_ (std::move (tags))
    {
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    bool contains (juce::StringRef t) const
    {
        if (tags_.isEmpty()) { return true; }
        else {
            return tags_.contains (t);
        }
    }
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    bool hasAttributes() const
    {
        return hasAttributes_;
    }
    
    bool hasParameters() const
    {
        return hasParameters_;
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    static Tags attributes (juce::StringArray&& tags)
    {
        return Tags (true, false, std::move (tags));
    }
    
    static Tags attributes (juce::StringRef tag)
    {
        return Tags (true, false, juce::StringArray (tag));
    }
    
    static Tags parameters (juce::StringArray&& tags)
    {
        return Tags (false, true, std::move (tags));
    }
    
    static Tags parameters (juce::StringRef tag)
    {
        return Tags (false, true, juce::StringArray (tag));
    }
    
private:
    bool hasAttributes_;
    bool hasParameters_;

private:
    juce::StringArray tags_;
    
private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Tags)
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
