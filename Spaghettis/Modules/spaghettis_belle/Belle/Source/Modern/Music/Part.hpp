
/* 
    Copyright (c) 2007-2013 Andi Brae.
    Copyright (c) 2013 Jojo and others.
    
*/

/* < http://opensource.org/licenses/BSD-2-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

/* To determine spacing between parts. */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace belle {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Part {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    Part() : position_ (0.0), extra_ (0.0)
    {
    }

public:
    Part (const Part&) = delete;
    Part& operator = (const Part&) = delete;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void addSpacing (const Path& path)
    {
        /* Do NOT include the symbols over multiple staves to compute the spacing. */
        /* Use the bounded box for efficiency. */
        
        if (path.getProperty (mica::Large) == mica::Undefined) { path_.addRectangle (path.getBounds()); }
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    double getPosition() const
    {
        return position_;
    }

    double getExtra() const
    {
        return extra_;
    }
    
    const Path& getSpacing() const
    {
        return path_;
    }
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void setPosition (double position)
    {
        position_ = position;
    }
    
    void setExtra (double extra)
    {
        extra_ = extra;
    }

    void setSpacing (const Path& path)
    {
        path_ = path;
    }
    
private:
    Path path_;
    double position_;
    double extra_;

private:
    PRIM_LEAK_DETECTOR (Part)
};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace belle

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
