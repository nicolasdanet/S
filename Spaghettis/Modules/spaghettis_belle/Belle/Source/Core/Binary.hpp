
/* 
    Copyright (c) 2007-2013 Andi Brae.
    Copyright (c) 2013 Jojo and others.
    
*/

/* < http://opensource.org/licenses/BSD-2-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace belle {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

struct Binary {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static std::string make (const std::string& name, const Array<byte> & data)
{
    std::ostringstream s;
    
    s << newLine;
    s << "/* Auto-generated file. */" << newLine;
    s << newLine;
    s << "// ====================================" << newLine;
    s << newLine;
    s << "namespace belle {" << newLine;
    s << newLine;
    s << "extern const prim::byte* " << name << ";" << newLine;
    s << newLine;
    s << "#ifdef BELLE_COMPILE_INLINE" << newLine;
    s << newLine;
    s << "static const prim::byte " << name <<"Data[" << data.size() <<"] = " << newLine;
    s << "    " "{";
    
    for (int i = 0; i < data.size(); ++i) {
    //
    if ((i % 10) == 0) { s << newLine << "    " "    "; }
    s << Utils::paddedLeft (static_cast<int> (data[i]), 4);
    if (i != (data.size() - 1)) { s << ","; }
    //
    }
    
    s << newLine;
    s << "    " "};" << newLine;
    s << newLine;
    s << "const prim::byte* " << name;
    s << " = static_cast<const prim::byte*> (" << name << "Data);" << newLine;
    s << newLine;
    s << "#endif // BELLE_COMPILE_INLINE" << newLine;
    s << newLine;
    s << "} // namespace belle" << newLine;
    s << newLine;
    
    return s.str();
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace belle

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
