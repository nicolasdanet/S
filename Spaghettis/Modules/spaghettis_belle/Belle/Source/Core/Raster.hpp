
/* 
    Copyright (c) 2007-2013 Andi Brae.
    Copyright (c) 2013 Jojo and others.
    
*/

/* < http://opensource.org/licenses/BSD-2-Clause > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

/* A state for colors and line width. */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace belle {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class Raster {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    Raster() : fill_ (Colors::empty()), stroke_ (Colors::empty()), width_ (0.0) 
    {
    }

    Raster (const Raster&) = default;
    Raster (Raster&&) = default;
    Raster& operator = (const Raster&) = default;
    Raster& operator = (Raster&&) = default;

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    std::string asPDFString() const
    {
        std::ostringstream s; s.setf (std::ios::fixed, std::ios::floatfield);
        
        s << "    ";
        s << getStrokeColor().getRed();
        s << " " << getStrokeColor().getGreen();
        s << " " << getStrokeColor().getBlue();
        s << " " "SC" << newLine;
      
        s << "    ";
        s << getFillColor().getRed();
        s << " " << getFillColor().getGreen();
        s << " " << getFillColor().getBlue();
        s << " " "sc" << newLine;
        
        if (getWidth() > 0.0) { s << "    " << getWidth(); s << " w" << newLine; }

        return s.str();
    }

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    Color getFillColor() const
    {
        return fill_;
    }
    
    Color getStrokeColor() const
    {   
        return stroke_;
    }
    
    double getWidth() const
    {
        return width_;
    }
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    Raster& setFillColor (Color color)
    {
        fill_ = color; return *this;
    }
    
    Raster& setStrokeColor (Color color)
    {   
        stroke_ = color; return *this;
    }
    
    Raster& setWidth (double width)
    {
        width_ = width; return *this;
    }
    
private:
    Color fill_;
    Color stroke_;
    double width_;

private:
    PRIM_LEAK_DETECTOR (Raster)
};
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

} // namespace belle

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
